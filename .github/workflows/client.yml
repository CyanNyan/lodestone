name: Build Lodestone Core

on:
  workflow_dispatch:
    inputs:
      release:
        description: "Whether to draft a release"
        required: true
        default: false
        type: boolean
  workflow_call:
    inputs:
      release:
        description: "Whether to draft a release"
        required: true
        default: false
        type: boolean

env:
  CARGO_TERM_COLOR: always

jobs:
  build_lodestone:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "windows-latest"
            target: "x86_64-pc-windows-msvc"
            os: "windows"
            arch: "x86_64"
            postfix: ".exe"
          - platform: "ubuntu-latest"
            target: "x86_64-unknown-linux-gnu"
            os: "linux"
            arch: "x86_64"
            postfix: ""
          - platform: "ubuntu-latest"
            target: "aarch64-unknown-linux-gnu"
            os: "linux"
            arch: "aarch64"
            postfix: ""
          - platform: "macos-latest"
            target: "x86_64-apple-darwin"
            os: "macos"
            arch: "x86_64"
            postfix: ""
          - platform: "macos-latest"
            target: "aarch64-apple-darwin"
            os: "macos"
            arch: "aarch64"
            postfix: ""

    runs-on: ${{ matrix.platform }}
    defaults:
      run:
        working-directory: ./
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "release"
          key: ${{ matrix.target }}-core

      - name: Build Lodestone Core
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --features "vendored-openssl" --target ${{ matrix.target }}

      - name: Find Version
        id: find_version
        run: |
          cargo install cargo-get
          VERSION=$(cargo get version)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          FILENAME="lodestone_core_${{matrix.os}}_${{matrix.arch}}_${VERSION}${{matrix.postfix}}"
          echo "FILENAME=${FILENAME}" >> $GITHUB_ENV

      - name: Rename File
        run: |
          mv ./target/${{ matrix.target }}/release/main${{ matrix.postfix }} ./${FILENAME}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${FILENAME}
          path: ./${FILENAME}
      
      - name: Draft Release
        uses: softprops/action-gh-release@v1
        if: inputs.release
        with:
          files: ./${FILENAME}
          tag_name: ${VERSION$}
          draft: true
          prerelease: true
  
